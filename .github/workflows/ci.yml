name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build services
        run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_AUTH: ecommerce-auth-service
          ECR_REPOSITORY_CATALOG: ecommerce-catalog-service
          ECR_REPOSITORY_DASHBOARD: ecommerce-dashboard
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build and push auth service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_AUTH:$IMAGE_TAG ./auth-service
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_AUTH:$IMAGE_TAG
          
          # Build and push catalog service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_CATALOG:$IMAGE_TAG ./catalog-service
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_CATALOG:$IMAGE_TAG
          
          # Build and push dashboard
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_DASHBOARD:$IMAGE_TAG ./ai-dashboard
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_DASHBOARD:$IMAGE_TAG